/*
 *  Copyright (c) 2011-2014 Qredo Ltd.  Strictly confidential.  All rights reserved.
 */

import UIKit
import XCTest

class KeychainTests: XCTestCase {

    func testKeychainSerialization() {
        let operatorInfo = QredoOperatorInfo(
            name: "TestOperator",
            serviceUri: "http://test.qredo.com/test",
            accountID: "0123456789",
            currentServiceAccess: NSSet(),
            nextServiceAccess: NSSet())

        let keychain = QredoKeychain(operatorInfo: operatorInfo, vaultId: nil, authenticationKey: nil, bulkKey: nil)
        let vaultIdBytes : [Byte] = [
            0x74, 0x65, 0x73, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]

        let testEncKeyBytes : [Byte] = [
            0x94, 0x49, 0x25, 0xca, 0x2c, 0xe5, 0x3e, 0xbb, 0x09, 0x38, 0x52, 0x31,
            0xfa, 0x6d, 0x43, 0x39, 0xd3, 0x86, 0x82, 0x63, 0x2b, 0x27, 0xf0, 0xee,
            0x74, 0x2d, 0xb8, 0x2d, 0xa3, 0x3a, 0x7a, 0x3d
        ]

        let testAuthKeyBytes : [Byte] = [
            0x49, 0x76, 0x78, 0xee, 0xeb, 0xd6, 0x6f, 0x0b, 0x86, 0x4f, 0x67, 0xf1,
            0x36, 0xed, 0xab, 0x8d, 0x25, 0x27, 0xe6, 0xf0, 0x5c, 0x8a, 0xa9, 0x00,
            0x67, 0xa5, 0x15, 0xaa, 0x4e, 0xab, 0xb2, 0x22
        ]

        let vaultIdData = NSData(bytes: vaultIdBytes, length: vaultIdBytes.count)
        let testEncKeyData = NSData(bytes: testEncKeyBytes, length: testEncKeyBytes.count)
        let testAuthKeyData = NSData(bytes: testAuthKeyBytes, length: testAuthKeyBytes.count)

        keychain.setVaultId(QredoQUID(QUIDData: vaultIdData))
        keychain.setVaultAuthKey(testAuthKeyData, bulkKey: testEncKeyData)

        let keychainData = keychain.data()

        println(keychainData)

        let deserialized = QredoKeychain(data: keychainData)
        XCTAssertNotNil(deserialized, "failed to deserialize the keychain")
        let keys = deserialized.vaultKeys()

        XCTAssertEqual(keys.encryptionKey, testEncKeyData, "vault encryption key is different")
        XCTAssertEqual(keys.authenticationKey, testAuthKeyData, "vault authentication key is different")
        XCTAssertEqual(deserialized.vaultId().data(), vaultIdData, "vault id is different")
    }


    func testParseKeychain() {
        let keychainData : [Byte] = [
            0x28, 0x37, 0x3a, 0x62, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x37, 0x3a,
            0x62, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x28, 0x31, 0x3a, 0x43, 0x39,
            0x3a, 0x27, 0x4b, 0x65, 0x79, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x28, 0x31,
            0x35, 0x3a, 0x27, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
            0x6c, 0x54, 0x79, 0x70, 0x65, 0x35, 0x3a, 0x49, 0x00, 0x00, 0x00, 0x00,
            0x29, 0x28, 0x32, 0x32, 0x3a, 0x27, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
            0x74, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x49,
            0x6e, 0x66, 0x6f, 0x28, 0x31, 0x3a, 0x43, 0x32, 0x36, 0x3a, 0x27, 0x45,
            0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f,
            0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65,
            0x28, 0x31, 0x35, 0x3a, 0x27, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
            0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x35, 0x3a, 0x49, 0x00, 0x00,
            0x00, 0x06, 0x29, 0x28, 0x31, 0x39, 0x3a, 0x27, 0x65, 0x6e, 0x63, 0x72,
            0x79, 0x70, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4b,
            0x65, 0x79, 0x32, 0x30, 0x32, 0x3a, 0x62, 0x28, 0x37, 0x3a, 0x62, 0x00,
            0x00, 0x00, 0x02, 0x00, 0x00, 0x37, 0x3a, 0x62, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x31, 0x34, 0x35, 0x3a, 0x62, 0x35, 0x1b, 0xf8, 0x0c, 0xe4,
            0x36, 0x8c, 0x19, 0x9d, 0x78, 0x7a, 0x0a, 0x6a, 0xbc, 0xab, 0x9f, 0x1b,
            0x49, 0x47, 0x26, 0x07, 0x3e, 0xaa, 0x42, 0xc0, 0xfb, 0x7d, 0xc1, 0xf0,
            0xe2, 0x4e, 0x02, 0x50, 0x87, 0xcb, 0x68, 0x17, 0xdb, 0xe9, 0x6c, 0xa4,
            0x6c, 0x09, 0x6d, 0xcb, 0x12, 0x85, 0xad, 0x4e, 0xf4, 0xd1, 0x26, 0xa4,
            0x2b, 0x69, 0xf3, 0xff, 0x63, 0x6d, 0xd1, 0xb3, 0x87, 0xbf, 0x64, 0x3e,
            0x95, 0xac, 0x7c, 0x3e, 0x24, 0xb3, 0x9e, 0x79, 0x68, 0xcb, 0x20, 0x2d,
            0x5a, 0x72, 0x40, 0x44, 0xb5, 0x12, 0x27, 0x22, 0x2d, 0xd0, 0xc3, 0x14,
            0x03, 0xd0, 0xa2, 0x17, 0x02, 0xaf, 0x9c, 0x52, 0x95, 0xdb, 0x33, 0x51,
            0x8f, 0xce, 0x38, 0x54, 0x7c, 0x75, 0x8c, 0xa3, 0xc5, 0x80, 0x56, 0x37,
            0x2c, 0xb3, 0x49, 0x7d, 0xe5, 0xcf, 0x01, 0xf4, 0x49, 0x57, 0x5b, 0x78,
            0x6c, 0x9f, 0x15, 0x4b, 0x56, 0xa4, 0x6f, 0x99, 0xba, 0x13, 0x56, 0x1f,
            0x9b, 0xbe, 0x67, 0x04, 0xa4, 0x94, 0x22, 0x29, 0xae, 0x02, 0x0a, 0x29,
            0x3b, 0xe4, 0xe6, 0x8f, 0x0c, 0x8f, 0xd9, 0x27, 0x02, 0x28, 0x8a, 0x5c,
            0x11, 0x7c, 0x09, 0xa2, 0xef, 0xdc, 0xe9, 0x04, 0x05, 0x94, 0x5b, 0x55,
            0x7d, 0x20, 0xa9, 0x50, 0x29, 0x29, 0x29, 0x28, 0x31, 0x33, 0x3a, 0x27,
            0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f,
            0x28, 0x31, 0x3a, 0x43, 0x31, 0x33, 0x3a, 0x27, 0x4f, 0x70, 0x65, 0x72,
            0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x28, 0x31, 0x30, 0x3a,
            0x27, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x31, 0x31,
            0x3a, 0x53, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
            0x29, 0x28, 0x32, 0x31, 0x3a, 0x27, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
            0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65,
            0x73, 0x73, 0x28, 0x31, 0x3a, 0x7b, 0x29, 0x29, 0x28, 0x35, 0x3a, 0x27,
            0x6e, 0x61, 0x6d, 0x65, 0x31, 0x33, 0x3a, 0x53, 0x54, 0x65, 0x73, 0x74,
            0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x29, 0x28, 0x31, 0x38,
            0x3a, 0x27, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
            0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x28, 0x31, 0x3a, 0x7b, 0x29,
            0x29, 0x28, 0x31, 0x31, 0x3a, 0x27, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
            0x65, 0x55, 0x72, 0x69, 0x32, 0x37, 0x3a, 0x53, 0x68, 0x74, 0x74, 0x70,
            0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x71, 0x72, 0x65, 0x64,
            0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x29, 0x29,
            0x29, 0x28, 0x31, 0x30, 0x3a, 0x27, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49,
            0x6e, 0x66, 0x6f, 0x28, 0x31, 0x3a, 0x43, 0x31, 0x34, 0x3a, 0x27, 0x56,
            0x61, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65,
            0x28, 0x39, 0x3a, 0x27, 0x6b, 0x65, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65,
            0x28, 0x31, 0x3a, 0x7b, 0x28, 0x31, 0x3a, 0x43, 0x31, 0x34, 0x3a, 0x27,
            0x56, 0x61, 0x75, 0x6c, 0x74, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x6f, 0x72,
            0x65, 0x28, 0x31, 0x32, 0x3a, 0x27, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
            0x4c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x3a, 0x49, 0x00, 0x00, 0x00, 0x00,
            0x29, 0x28, 0x31, 0x35, 0x3a, 0x27, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e,
            0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x35, 0x3a, 0x49, 0x00,
            0x00, 0x00, 0x00, 0x29, 0x28, 0x31, 0x39, 0x3a, 0x27, 0x65, 0x6e, 0x63,
            0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x4b,
            0x65, 0x79, 0x73, 0x38, 0x35, 0x38, 0x3a, 0x62, 0x28, 0x37, 0x3a, 0x62,
            0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x37, 0x3a, 0x62, 0x00, 0x00, 0x00,
            0x01, 0x00, 0x00, 0x38, 0x30, 0x31, 0x3a, 0x62, 0x53, 0xf5, 0x2f, 0x50,
            0x9a, 0xde, 0xd2, 0x91, 0x56, 0x3a, 0xe0, 0x6c, 0x83, 0xc7, 0xea, 0xf7,
            0x37, 0xa3, 0x37, 0x3e, 0x14, 0xab, 0xe0, 0x00, 0x25, 0x49, 0x8d, 0x4f,
            0xf7, 0xe6, 0x28, 0x17, 0x97, 0xb9, 0x55, 0x19, 0x37, 0x22, 0x59, 0x1c,
            0xff, 0x1f, 0xc3, 0x5e, 0x40, 0x7e, 0xdb, 0x0c, 0x80, 0x8e, 0x64, 0xc9,
            0x1c, 0x2f, 0xdb, 0xfb, 0x6e, 0xb2, 0x41, 0x9e, 0xaa, 0x6f, 0x38, 0x12,
            0x31, 0x01, 0x18, 0xbb, 0xfa, 0xb3, 0x1f, 0x27, 0x2b, 0x60, 0x93, 0x4e,
            0x31, 0xe7, 0x10, 0xf1, 0x80, 0xdf, 0x34, 0x2e, 0x97, 0xf1, 0x60, 0x56,
            0xa5, 0x02, 0x2b, 0xe8, 0xd0, 0x05, 0xd9, 0x2e, 0x6c, 0x9e, 0x80, 0xb2,
            0x56, 0xbf, 0xae, 0xd5, 0xed, 0xc7, 0x6c, 0x6c, 0x77, 0x9c, 0x5d, 0x13,
            0xe8, 0x4d, 0x2f, 0x72, 0x2f, 0xcd, 0x67, 0x58, 0x18, 0xf5, 0x88, 0xa6,
            0x07, 0x9e, 0x33, 0x07, 0x78, 0x39, 0xc8, 0x4d, 0xfd, 0x6f, 0xc4, 0xae,
            0xc0, 0x83, 0xc1, 0x36, 0x41, 0x75, 0x07, 0x31, 0xf6, 0xbf, 0x86, 0x89,
            0xf3, 0xc7, 0xce, 0x77, 0x2d, 0x24, 0x35, 0x67, 0x8f, 0xda, 0x1b, 0x1e,
            0xc7, 0xec, 0x3c, 0xe5, 0x24, 0x60, 0xdd, 0x68, 0xf7, 0x10, 0xdc, 0x21,
            0xb4, 0x19, 0x13, 0xc2, 0xda, 0x99, 0xd5, 0xc3, 0x6b, 0x39, 0x84, 0xce,
            0xbb, 0xee, 0xfb, 0x46, 0xa8, 0x26, 0x11, 0x47, 0x0f, 0x3a, 0x68, 0xe7,
            0xd6, 0x0d, 0x2f, 0x8e, 0x96, 0x42, 0xda, 0x50, 0x66, 0xd2, 0x46, 0x83,
            0xa1, 0xcd, 0xf2, 0x27, 0xee, 0x8d, 0xd0, 0x15, 0xff, 0xaf, 0x85, 0x20,
            0xb0, 0x78, 0x5c, 0x47, 0xb0, 0x28, 0xd0, 0x90, 0x0d, 0xe3, 0x0d, 0x92,
            0xa0, 0xac, 0x0b, 0xae, 0x9a, 0x27, 0x23, 0xb5, 0xea, 0x79, 0x9f, 0x6d,
            0x42, 0xf0, 0x2e, 0xaa, 0x58, 0x3e, 0xfd, 0xd4, 0x99, 0x61, 0x20, 0xec,
            0x38, 0x72, 0x70, 0x5f, 0x8e, 0x8f, 0x2f, 0xe9, 0x2a, 0x41, 0x56, 0x15,
            0x3c, 0x55, 0xd0, 0xbb, 0xf0, 0x01, 0x2e, 0x07, 0xc6, 0xd4, 0xd6, 0x0a,
            0x74, 0xc4, 0x4e, 0x73, 0x0d, 0x62, 0x50, 0x71, 0xff, 0xf0, 0x38, 0x95,
            0x31, 0x98, 0x0e, 0xf3, 0x76, 0xbf, 0xde, 0x5e, 0x2e, 0xfe, 0xcf, 0x71,
            0xc2, 0x5c, 0xc8, 0xcc, 0xc0, 0x18, 0xe5, 0xe4, 0x37, 0xc6, 0x5f, 0x8c,
            0x6d, 0xf3, 0xe1, 0x9c, 0x1a, 0xc5, 0xe5, 0x44, 0x01, 0xd7, 0x9b, 0x80,
            0x08, 0xc6, 0xe2, 0xb2, 0x53, 0x58, 0x05, 0xa5, 0xd3, 0xff, 0x2a, 0x98,
            0x07, 0xd9, 0x89, 0xc3, 0xa2, 0x81, 0x41, 0x4b, 0xfd, 0x77, 0x43, 0xb3,
            0x61, 0x5f, 0xe7, 0x4a, 0x2c, 0x29, 0x71, 0x9c, 0xa9, 0x0b, 0x32, 0xe1,
            0x38, 0x01, 0x53, 0xda, 0x60, 0xcd, 0xff, 0xa4, 0x95, 0x91, 0x38, 0xb5,
            0xbf, 0x21, 0x9e, 0x78, 0xff, 0x73, 0x4a, 0xde, 0xd4, 0xdc, 0xef, 0x1f,
            0x8c, 0xdb, 0xd3, 0xdd, 0x20, 0x45, 0x2f, 0x03, 0x17, 0xeb, 0xf0, 0x7c,
            0x3d, 0xa0, 0x82, 0x0c, 0xf5, 0xcf, 0xb9, 0xf9, 0xa4, 0x40, 0x49, 0x03,
            0x9c, 0xd8, 0xfd, 0x69, 0x09, 0x4a, 0x25, 0x13, 0x04, 0xd0, 0x94, 0xba,
            0xeb, 0xf8, 0xb1, 0xfd, 0xd5, 0x7d, 0x72, 0xad, 0xbf, 0x87, 0x50, 0xe7,
            0x43, 0xd2, 0xaa, 0x0c, 0xde, 0xf4, 0xe0, 0x56, 0x59, 0xdd, 0x2a, 0x7c,
            0xf8, 0xec, 0xe6, 0x61, 0xe2, 0x69, 0x15, 0x29, 0xf1, 0x29, 0x09, 0x60,
            0x39, 0x30, 0x93, 0xc5, 0x18, 0x6c, 0x0d, 0x8c, 0xb6, 0xe1, 0x50, 0x6d,
            0x14, 0xc3, 0x20, 0x98, 0x13, 0xe1, 0xea, 0x09, 0x34, 0x51, 0xd3, 0x67,
            0xf6, 0xb1, 0xc8, 0x59, 0x50, 0xd6, 0x28, 0x46, 0xc5, 0xbe, 0x86, 0xc8,
            0x55, 0x36, 0xa0, 0x2f, 0x06, 0x3b, 0xf1, 0x45, 0x05, 0xa2, 0xa8, 0xfd,
            0x6c, 0x3e, 0x48, 0x00, 0x44, 0x6e, 0x53, 0x38, 0xec, 0x62, 0x0a, 0xd7,
            0x83, 0x1a, 0x39, 0xb6, 0x83, 0x2c, 0x5a, 0x02, 0xe2, 0xab, 0xf5, 0xe6,
            0xef, 0x31, 0xeb, 0xaf, 0x74, 0x00, 0x54, 0x29, 0xa8, 0x17, 0xd7, 0x1a,
            0x06, 0x48, 0x05, 0x52, 0x28, 0x30, 0xf7, 0x2a, 0xd2, 0x26, 0x76, 0x8f,
            0xeb, 0x71, 0xa3, 0x7f, 0xd8, 0x65, 0x0e, 0xa1, 0x55, 0x49, 0x30, 0x1e,
            0x12, 0x4d, 0xa4, 0x6e, 0x6d, 0xbb, 0x5c, 0x85, 0x24, 0x4f, 0xbd, 0x14,
            0x23, 0xb9, 0x07, 0x5e, 0x7b, 0x43, 0x85, 0x27, 0xa1, 0xa3, 0xf6, 0x50,
            0x67, 0x60, 0xbb, 0x0e, 0xbf, 0xf2, 0x22, 0x8b, 0x82, 0xa5, 0x97, 0x7d,
            0xf5, 0x51, 0x44, 0xa6, 0xf9, 0x43, 0x05, 0x0e, 0xe2, 0x4b, 0x94, 0x2d,
            0x04, 0x68, 0x50, 0xf6, 0xe6, 0x7a, 0x16, 0x1b, 0xb9, 0x93, 0xff, 0xf2,
            0xa4, 0x69, 0x85, 0x23, 0x68, 0xdd, 0x69, 0x61, 0xce, 0xba, 0xbd, 0xa8,
            0xfe, 0xd1, 0x89, 0xfa, 0x8e, 0x03, 0x0a, 0x8c, 0xd1, 0x9f, 0xfd, 0x3b,
            0x66, 0xb6, 0x2f, 0x1f, 0x33, 0x94, 0xa0, 0xce, 0xaf, 0x0f, 0xc4, 0xd8,
            0x7e, 0x42, 0x25, 0x84, 0x0c, 0xeb, 0x57, 0x1b, 0x08, 0xd9, 0x1e, 0xff,
            0x44, 0xfb, 0x2c, 0x34, 0xbc, 0x84, 0x06, 0x65, 0x1e, 0x3c, 0x32, 0x31,
            0x9c, 0x03, 0xc0, 0xeb, 0x11, 0xcb, 0xa4, 0x5b, 0xe8, 0x77, 0xd2, 0xc9,
            0xe1, 0x1b, 0x91, 0x7d, 0xd6, 0xf1, 0x5b, 0x09, 0xf3, 0x01, 0x04, 0x31,
            0x75, 0x87, 0x91, 0x85, 0xe4, 0x6a, 0x86, 0xc4, 0x8f, 0x6c, 0xd3, 0xe3,
            0xe2, 0xde, 0xa6, 0xa2, 0x7b, 0x48, 0xfb, 0x12, 0x08, 0x6a, 0xcf, 0x6c,
            0x0b, 0x1c, 0x83, 0x9e, 0x6d, 0x18, 0x94, 0x93, 0xb2, 0x0d, 0xc5, 0x86,
            0x4b, 0x80, 0xfe, 0x94, 0x68, 0x17, 0x79, 0x02, 0x07, 0x3d, 0x4d, 0xa2,
            0x0e, 0xc5, 0x64, 0x62, 0x68, 0xec, 0x08, 0x87, 0xb7, 0xde, 0x8a, 0x0c,
            0x97, 0xc1, 0xdd, 0x77, 0x04, 0x40, 0xc6, 0x29, 0x0a, 0x31, 0xcc, 0x91,
            0xd0, 0xa5, 0x94, 0x40, 0x07, 0x6f, 0x58, 0x65, 0x0b, 0x40, 0xe7, 0x82,
            0xbf, 0x0f, 0xbe, 0xf3, 0x29, 0x72, 0x36, 0x85, 0x8c, 0x48, 0x9e, 0x6d,
            0x0e, 0xa0, 0x54, 0x67, 0x2b, 0x53, 0x45, 0xe2, 0xf4, 0x5b, 0xa1, 0x5b,
            0x71, 0x3c, 0x91, 0xb2, 0x32, 0xd7, 0x94, 0xd1, 0xd2, 0x35, 0xcf, 0xdb,
            0x0b, 0x29, 0x29, 0x29, 0x29, 0x28, 0x38, 0x3a, 0x27, 0x76, 0x61, 0x75,
            0x6c, 0x74, 0x49, 0x44, 0x33, 0x33, 0x3a, 0x51, 0x74, 0x65, 0x73, 0x74,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x29, 0x29, 0x29, 0x29, 0x29
        ]

        let keychain = QredoKeychain(data: NSData(bytes: keychainData, length: keychainData.count))

        println(keychain.vaultId())
    }

}
