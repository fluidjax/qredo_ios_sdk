Command Line Tests
Note the pipe through xcpretty - (available on git hub) which nicely formats the output (but there is a delay)


Main Tests includes LF, Crypto & SDK for CI:
--------------------------------------------
xcodebuild    -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 7,OS=latest" -workspace QredoSDK.xcworkspace -scheme QredoXDK  build test | xcpretty
Note the push tests can't be automated (on the Sim) as they must be run on a device. Therefore they are not included for CI testing.


For Manually running individual Tests Use:
------------------------------------------
xcodebuild    -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 7,OS=latest" -workspace QredoSDK.xcworkspace -scheme LinguaFrancaTests  build test | xcpretty
xcodebuild    -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 7,OS=latest" -workspace QredoSDK.xcworkspace -scheme QredoCryptoTests  build test | xcpretty
xcodebuild    -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 7,OS=latest" -workspace QredoSDK.xcworkspace -scheme QredoSDKTests  build test | xcpretty

Build & Test
    To test Project
        Clean & Build QredoXDK
        Clean &  Build QredoXDK_universal (this creates the framework)





INFER Static Analysis Results
-----------------------------
Run by executing script in project root called run-infer

Excludes Pods & Auto Generated Qredo Code. (Qredo.h)




Found 6 issues

QredoSDK/Crypto/QredoCertificateUtils.m:563: error: MEMORY_LEAK
memory dynamically allocated to `items` by call to `CFArrayCreate()` at line 562, column 24 is not reachable after line 563, column 23
561.
562.       CFArrayRef items = CFArrayCreate(NULL,0,0,NULL);
563. >     OSStatus status = SecPKCS12Import((__bridge CFDataRef)pkcs12Data,(__bridge CFDictionaryRef)options,&items);
564.
565.       if (status == errSecSuccess){

QredoSDK/LinguaFranca/NSData+QredoRandomData.m:15: error: MEMORY_LEAK
memory dynamically allocated to `randomBytes` by call to `malloc()` at line 8, column 28 is not reachable after line 15, column 5
13.       }
14.
15. >     NSData *randomData = [NSData dataWithBytesNoCopy:randomBytes
16.                                                 length:length
17.                                           freeWhenDone:YES];

QredoSDK/Internal/ReadableKeys/ReadableKeys.m:88: error: NULL_DEREFERENCE
pointer `keybytes` last assigned on line 83 could be null and is dereferenced by call to `extract()` at line 88, column 20
86.
87.       for (int i = 0; i < bitLength; i += 11){
88. >         long res = extract(keybytes,0 + i,11);
89.
90.           if (first == YES){

QredoSDK/Crypto/QredoCrypto.m:887: error: MEMORY_LEAK
memory dynamically allocated by call to `malloc()` at line 879, column 40 is not reachable after line 887, column 5
885.       NSData *hash = [self sha256:message];
886.
887. >     int pss_result = rsa_pss_sha256_verify(hash.bytes,hash.length,decryptedSignature.bytes,decryptedSignature.length,saltLength,keyLength * 8 - 1);
888.
889.       if (pss_result < 0 && pss_result != QREDO_RSA_PSS_NOT_VERIFIED){

QredoSDK/Crypto/QredoCrypto.m:883: error: MEMORY_LEAK
memory dynamically allocated to `decryptedSignatureBytes` by call to `malloc()` at line 879, column 40 is not reachable after line 883, column 5
881.       memcpy(decryptedSignatureBytes + destinationIndex,buffer.bytes,outputDataLength);
882.
883. >     NSMutableData *decryptedSignature = [NSMutableData dataWithBytesNoCopy:decryptedSignatureBytes length:keyLength freeWhenDone:YES];
884.
885.       NSData *hash = [self sha256:message];

QredoSDK/LinguaFranca/QredoWireFormat.m:263: warning: DIRECT_ATOMIC_PROPERTY_ACCESS
Direct access to ivar `_marker` of an atomic property at line 263, column 57. Accessing an ivar of an atomic property makes the property nonatomic
261.
262.   -(NSData *)asData {
263. >     NSMutableData *data = [NSMutableData dataWithBytes:&_marker length:1];
264.       if ([self.data length] > 0){
265.           [data appendData:self.data];

Summary of the reports

MEMORY_LEAK: 4
NULL_DEREFERENCE: 1
DIRECT_ATOMIC_PROPERTY_ACCESS: 1
